<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wuxi.ads.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.wuxi.ads.mapper.UserMapper">
        <id column="id" jdbcType="INTEGER" property="userid" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="role" jdbcType="TINYINT" property="role" />
    </resultMap>
    <sql id="Base_Column_List">
        id, username, password, role
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{userid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where id = #{userid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.wuxi.ads.bean.User">
        insert into user (id, username, password,
                          role)
        values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{role,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.wuxi.ads.bean.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="role != null">
                role,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                #{role,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wuxi.ads.bean.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="role != null">
                role = #{role,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{userid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wuxi.ads.bean.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            role = #{role,jdbcType=TINYINT}
        where id = #{userid,jdbcType=INTEGER}
    </update>
    <select id="selectByUsernameAndPasswordAndRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where username = #{username}
        and password = #{password}
        and role = #{role}
        limit 1
    </select>
    <select id="selectByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where username = #{username}
        limit 1
    </select>
    <select id="selectAllByLimit" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from user
        limit #{begin}, #{size}
    </select>
    <select id="selectCount" resultType="int">
        select count(*) from user
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from user
    </select>
    <select id="selectCountBySearch" resultType="int">
        select count(*) from user
        <where>
            <if test="username != null and username != '' ">
                and username like concat('%',#{username},'%')
            </if>
        </where>
    </select>
    <select id="selectBySearch" resultMap="BaseResultMap">
        select id, username, password, role
        from user
        <where>
            <if test="username != null and username != '' ">
                and username like concat('%',#{username},'%')
            </if>
        </where>
        limit #{begin}, #{size}
    </select>
</mapper>
